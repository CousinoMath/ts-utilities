{
  "id": 0,
  "name": "CousinoMath Typescript Utilties",
  "kind": 0,
  "flags": {},
  "children": [
    {
      "id": 175,
      "name": "\"Array\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/Users/cousi/Documents/GitHub/Documents/dev/TypeScript/Utilities/src/Array.ts",
      "children": [
        {
          "id": 200,
          "name": "accumulate",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 201,
              "name": "accumulate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`xs => [xs[0], f(xs[0], xs[1]), f(f(xs[0], xs[1]), xs[2]), ...]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns a function creates an array of running accumulations from an input array"
                  },
                  {
                    "tag": "see",
                    "text": "[[cumSum]]"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 202,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 203,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "accumulating function"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 204,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 205,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 206,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            },
                            {
                              "id": 207,
                              "name": "y",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Array.ts",
                          "line": 50,
                          "character": 32
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 208,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "an array to accumulate over\n"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 50,
              "character": 26
            }
          ]
        },
        {
          "id": 176,
          "name": "array",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 177,
              "name": "array",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Creates a recursive function over arrays with arbitrary return type."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 178,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 179,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 180,
                  "name": "init",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "value returned for an empty array"
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "S"
                  }
                },
                {
                  "id": 181,
                  "name": "ind",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "recursive rule applied to non-empty arrays\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 182,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 183,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 184,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            },
                            {
                              "id": 185,
                              "name": "ys",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Array.ts",
                          "line": 9,
                          "character": 41
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 186,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 187,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 188,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "typeParameter",
                              "name": "R"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "typeParameter",
                        "name": "S"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Array.ts",
                      "line": 9,
                      "character": 62
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 9,
              "character": 21
            }
          ]
        },
        {
          "id": 209,
          "name": "cumSum",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 210,
              "name": "cumSum",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`[xs[0], xs[0] + xs[1], xs[0] + xs[1] + xs[2], ...]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Takes an array and returns the array of running totals\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 211,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 65,
              "character": 22
            }
          ]
        },
        {
          "id": 238,
          "name": "find",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 239,
              "name": "find",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "returns": "either returns the first element of `xs` that makes `f` true or returns null\n",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "since ES6 introduced this to the Array prototype"
                  },
                  {
                    "tag": "summary",
                    "text": "Searches an array with a predicate returning the first element on which the predicate is true"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 240,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 241,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 242,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 243,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 244,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 245,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Array.ts",
                          "line": 123,
                          "character": 35
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Maybe",
                "id": 103,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 123,
              "character": 20
            }
          ]
        },
        {
          "id": 246,
          "name": "findIndex",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 247,
              "name": "findIndex",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "returns": "either the first index of `xs` whose element makes `f` true or returns -1\n",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "since ES6 introduced this to the Array prototype"
                  },
                  {
                    "tag": "summary",
                    "text": "Searches an array with a predicate returning the first index on whose value the predicate is true"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 248,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 249,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 250,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 251,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 252,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 253,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Array.ts",
                          "line": 137,
                          "character": 40
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 137,
              "character": 25
            }
          ]
        },
        {
          "id": 212,
          "name": "flatMap",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 213,
              "name": "flatMap",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Flatly maps an array-valued function over an input array\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 214,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 215,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 216,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 217,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 218,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 219,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "typeParameter",
                              "name": "S"
                            }
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Array.ts",
                          "line": 72,
                          "character": 32
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 220,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "R"
                    }
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "S"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 72,
              "character": 23
            }
          ]
        },
        {
          "id": 221,
          "name": "flatten",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 222,
              "name": "flatten",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Flattens an array of arrays\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 223,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 224,
                  "name": "xss",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "array",
                      "elementType": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 79,
              "character": 23
            }
          ]
        },
        {
          "id": 225,
          "name": "from",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 226,
              "name": "from",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "returns": "an array whose elements are `f` applied to their indices",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "since ES6 introduced this to the Array prototype"
                  },
                  {
                    "tag": "summary",
                    "text": "Returns an array of specified length whose entries are `f` mapped over the indices."
                  },
                  {
                    "tag": "throws",
                    "text": "`RangeError` when array length is invalid, i.e. at least `2^32` or negative.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 227,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 228,
                  "name": "len",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "length of the resulting array"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 229,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "function which will generate elements from their indices"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 230,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 231,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 232,
                              "name": "idx",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Array.ts",
                          "line": 91,
                          "character": 39
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 91,
              "character": 20
            }
          ]
        },
        {
          "id": 233,
          "name": "range",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 234,
              "name": "range",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Generates an array using an arithmetic sequence starting at `start`,\nincrementing by `delta`, and stopping no later than `stop`",
                "returns": ", where n = Math.floor((stop - start) / delta)\n",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Generates an array using an arithmetic sequence"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 235,
                  "name": "start",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "defaultValue": "0"
                },
                {
                  "id": 236,
                  "name": "stop",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 237,
                  "name": "delta",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "defaultValue": "1"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "number"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 113,
              "character": 21
            }
          ]
        },
        {
          "id": 189,
          "name": "reduce",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 190,
              "name": "reduce",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`f(..., f(xs[1], f(xs[0], init))...)`\nThis is different from `reduce` on the Array prototype. You'll find the\ntype signature there is",
                "text": "    Array.prototype.reduce<T>: (f: (accum: T, value: T, index?: number, array?: T[]) => T, initVal: T) => T\n\nWhereas this reduce function can return a value whose type is different\nthan that of the array elements.",
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "ever since I learned about `reduce<T>(...)`"
                  },
                  {
                    "tag": "summary",
                    "text": "An array reducer which can return an arbitrary value type."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 191,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 192,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 193,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "array to be reduced"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "R"
                    }
                  }
                },
                {
                  "id": 194,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "reducing function"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 195,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 196,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 197,
                              "name": "accum",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            },
                            {
                              "id": 198,
                              "name": "value",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Array.ts",
                          "line": 37,
                          "character": 4
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 199,
                  "name": "init",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "initial value\n"
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "S"
                  }
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "S"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Array.ts",
              "line": 35,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [200, 176, 209, 238, 246, 212, 221, 225, 233, 189]
        }
      ],
      "sources": [
        {
          "fileName": "Array.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 254,
      "name": "\"Either\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/Users/cousi/Documents/GitHub/Documents/dev/TypeScript/Utilities/src/Either.ts",
      "children": [
        {
          "id": 255,
          "name": "Left",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "comment": {
            "tags": [
              {
                "tag": "summary",
                "text": "Left half of the discriminated union\n"
              }
            ]
          },
          "typeParameter": [
            {
              "id": 256,
              "name": "R",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "children": [
            {
              "id": 257,
              "name": "kind",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "Either.ts",
                  "line": 8,
                  "character": 15
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "left"
              }
            },
            {
              "id": 258,
              "name": "value",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "Either.ts",
                  "line": 9,
                  "character": 16
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "R"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [257, 258]
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 7,
              "character": 21
            }
          ]
        },
        {
          "id": 259,
          "name": "Right",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "comment": {
            "tags": [
              {
                "tag": "summary",
                "text": "Right half of the discriminated union\n"
              }
            ]
          },
          "typeParameter": [
            {
              "id": 260,
              "name": "S",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "children": [
            {
              "id": 261,
              "name": "kind",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "Either.ts",
                  "line": 17,
                  "character": 15
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "right"
              }
            },
            {
              "id": 262,
              "name": "value",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "Either.ts",
                  "line": 18,
                  "character": 16
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "S"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [261, 262]
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 16,
              "character": 22
            }
          ]
        },
        {
          "id": 263,
          "name": "Either",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "comment": {
            "tags": [
              {
                "tag": "summary",
                "text": "Generic discriminated union\n"
              }
            ]
          },
          "typeParameter": [
            {
              "id": 264,
              "name": "R",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 265,
              "name": "S",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 24,
              "character": 18
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "Left",
                "id": 255,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "R"
                  }
                ]
              },
              {
                "type": "reference",
                "name": "Right",
                "id": 259,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "S"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 346,
          "name": "bindLeft",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 347,
              "name": "bindLeft",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`bindLeft(f)(left(x)) = left(f(x))`\n`bindLeft(f)(right(y)) = right(y)`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Transforms the left half of `Either` values"
                  },
                  {
                    "tag": "see",
                    "text": "[[bindRight]]"
                  },
                  {
                    "tag": "see",
                    "text": "[[lift]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 348,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 349,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 350,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 351,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 352,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 353,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 354,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "Either",
                            "id": 263,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              },
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Either.ts",
                          "line": 166,
                          "character": 4
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 355,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 356,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 357,
                          "name": "xe",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Either",
                            "id": 263,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "R"
                              },
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Either",
                        "id": 263,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          },
                          {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Either.ts",
                      "line": 167,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 165,
              "character": 24
            }
          ]
        },
        {
          "id": 334,
          "name": "bindRight",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 335,
              "name": "bindRight",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`bindRight(g)(left(x)) = left(x)`\n`bindRight(g)(right(y)) = right(g(y))`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Transforms the right half of `Either` values"
                  },
                  {
                    "tag": "see",
                    "text": "[[bindLeft]]"
                  },
                  {
                    "tag": "see",
                    "text": "[[lift]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 336,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 337,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 338,
                  "name": "U",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 339,
                  "name": "g",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 340,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 341,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 342,
                              "name": "y",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "Either",
                            "id": 263,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "R"
                              },
                              {
                                "type": "typeParameter",
                                "name": "U"
                              }
                            ]
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Either.ts",
                          "line": 153,
                          "character": 4
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 343,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 344,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 345,
                          "name": "xe",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Either",
                            "id": 263,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "R"
                              },
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Either",
                        "id": 263,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "R"
                          },
                          {
                            "type": "typeParameter",
                            "name": "U"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Either.ts",
                      "line": 154,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 152,
              "character": 25
            }
          ]
        },
        {
          "id": 266,
          "name": "either",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 267,
              "name": "either",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Inductive rule for the `Either` type.",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Creates functions over `Either` values\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 268,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 269,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 270,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 271,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 272,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 273,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 274,
                              "name": "l",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Either.ts",
                          "line": 31,
                          "character": 4
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 275,
                  "name": "g",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 276,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 277,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 278,
                              "name": "r",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Either.ts",
                          "line": 32,
                          "character": 4
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 279,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 280,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 281,
                          "name": "e",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Either",
                            "id": 263,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "R"
                              },
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Either.ts",
                      "line": 33,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 30,
              "character": 22
            }
          ]
        },
        {
          "id": 292,
          "name": "isLeft",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 293,
              "name": "isLeft",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`isLeft(left(_)) = true`\n`isLeft(right(_)) = false`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Tests whether an `Either` value is of the left type.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 294,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 295,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 296,
                  "name": "xe",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Either",
                    "id": 263,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "R"
                      },
                      {
                        "type": "typeParameter",
                        "name": "S"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 60,
              "character": 22
            }
          ]
        },
        {
          "id": 297,
          "name": "isRight",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 298,
              "name": "isRight",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`isRight(left(_)) = false`\n`isRight(right(_)) = true`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Test whether an `Either` value is of the right type.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 299,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 300,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 301,
                  "name": "xe",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Either",
                    "id": 263,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "R"
                      },
                      {
                        "type": "typeParameter",
                        "name": "S"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 69,
              "character": 23
            }
          ]
        },
        {
          "id": 282,
          "name": "left",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 283,
              "name": "left",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Using left often means explicitly annotating types as\nthe type of the right values cannot be easily deduced.",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Creates the 'left half' of an `Either` value\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 284,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 285,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 286,
                  "name": "x",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "R"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Either",
                "id": 263,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "R"
                  },
                  {
                    "type": "typeParameter",
                    "name": "S"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 42,
              "character": 20
            }
          ]
        },
        {
          "id": 358,
          "name": "leftDefault",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 359,
              "name": "leftDefault",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`leftDefault(d)(left(x)) = x`\n`leftDefault(d)(right(y)) = d`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns the left value if present, and a default otherwise."
                  },
                  {
                    "tag": "see",
                    "text": "[[rightDefault]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 360,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 361,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 362,
                  "name": "d",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "default value"
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "R"
                  }
                },
                {
                  "id": 363,
                  "name": "xe",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Either",
                    "id": 263,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "R"
                      },
                      {
                        "type": "typeParameter",
                        "name": "S"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "R"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 178,
              "character": 27
            }
          ]
        },
        {
          "id": 307,
          "name": "lefts",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 308,
              "name": "lefts",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`lefts([left(x), ...rest]) = [x, lefts(rest)]`\n`lefts([right(x), ...rest]) = lefts(rest)`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns an array consisting of the left values of `xes`."
                  },
                  {
                    "tag": "see",
                    "text": "[[rights]]"
                  },
                  {
                    "tag": "see",
                    "text": "[[partition]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 309,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 310,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 311,
                  "name": "xes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Array",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Either",
                        "id": 263,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "R"
                          },
                          {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "R"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 103,
              "character": 21
            }
          ]
        },
        {
          "id": 317,
          "name": "lift",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 318,
              "name": "lift",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`lift(f, g)(left(x)) = left(f(x))`\n`lift(f, g)(right(y)) = right(g(y))`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Enables transformations on `Either` values\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 319,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 320,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 321,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 322,
                  "name": "U",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 323,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 324,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 325,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 326,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Either.ts",
                          "line": 137,
                          "character": 4
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 327,
                  "name": "g",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 328,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 329,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 330,
                              "name": "y",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "U"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Either.ts",
                          "line": 138,
                          "character": 4
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 331,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 332,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 333,
                          "name": "xe",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Either",
                            "id": 263,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "R"
                              },
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Either",
                        "id": 263,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          },
                          {
                            "type": "typeParameter",
                            "name": "U"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Either.ts",
                      "line": 139,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 136,
              "character": 20
            }
          ]
        },
        {
          "id": 302,
          "name": "partition",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 303,
              "name": "partition",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`partition(xs) = [lefts(xs), rights(xs)]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Converts an array Eithers to a tuple of an array of left values and another of right values."
                  },
                  {
                    "tag": "see",
                    "text": "[[lefts]]"
                  },
                  {
                    "tag": "see",
                    "text": "[[rights]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 304,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 305,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 306,
                  "name": "xes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Array",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Either",
                        "id": 263,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "R"
                          },
                          {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "tuple",
                "elements": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "R"
                    }
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "S"
                    }
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 79,
              "character": 25
            }
          ]
        },
        {
          "id": 287,
          "name": "right",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 288,
              "name": "right",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Using right often means explicitly annotating types as\nthe type of the left values cannot be easily deduced.",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Creates the 'right half' of an `Either` value\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 289,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 290,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 291,
                  "name": "y",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "S"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Either",
                "id": 263,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "R"
                  },
                  {
                    "type": "typeParameter",
                    "name": "S"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 51,
              "character": 21
            }
          ]
        },
        {
          "id": 364,
          "name": "rightDefault",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 365,
              "name": "rightDefault",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`rightDefault(d)(left(x)) = d`\n`rightDefault(d)(right(y)) = y`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns the right value if present, and a default otherwise."
                  },
                  {
                    "tag": "see",
                    "text": "[[leftDefault]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 366,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 367,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 368,
                  "name": "d",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "default value"
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "S"
                  }
                },
                {
                  "id": 369,
                  "name": "xe",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Either",
                    "id": 263,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "R"
                      },
                      {
                        "type": "typeParameter",
                        "name": "S"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "S"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 189,
              "character": 28
            }
          ]
        },
        {
          "id": 312,
          "name": "rights",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 313,
              "name": "rights",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`rights([left(x), ...rest]) = rights(rest)`\n`rights([right(x), ...rest]) = [x, rights(rest)]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns an array consisting of the right values of `xes`."
                  },
                  {
                    "tag": "see",
                    "text": "[[lefts]]"
                  },
                  {
                    "tag": "see",
                    "text": "[[partition]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 314,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 315,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 316,
                  "name": "xes",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Array",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Either",
                        "id": 263,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "R"
                          },
                          {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "S"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Either.ts",
              "line": 120,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [255, 259]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [263]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            346,
            334,
            266,
            292,
            297,
            282,
            358,
            307,
            317,
            302,
            287,
            364,
            312
          ]
        }
      ],
      "sources": [
        {
          "fileName": "Either.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1,
      "name": "\"Function\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/Users/cousi/Documents/GitHub/Documents/dev/TypeScript/Utilities/src/Function.ts",
      "children": [
        {
          "id": 64,
          "name": "compose",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 65,
              "name": "compose",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`compose(g)(f)(x) = g(f(x))`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Creates the composition of two functions\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 66,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 67,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 68,
                  "name": "g",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 69,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 70,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 71,
                              "name": "y",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Function.ts",
                          "line": 46,
                          "character": 4
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 72,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 73,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "typeParameter": [
                        {
                          "id": 74,
                          "name": "R",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "parameters": [
                        {
                          "id": 75,
                          "name": "f",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 76,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 77,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 78,
                                      "name": "x",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "typeParameter",
                                        "name": "R"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "S"
                                  }
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "Function.ts",
                                  "line": 47,
                                  "character": 9
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 79,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 80,
                              "name": "__call",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 81,
                                  "name": "x",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "R"
                                  }
                                }
                              ],
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "Function.ts",
                              "line": 47,
                              "character": 25
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Function.ts",
                      "line": 47,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Function.ts",
              "line": 45,
              "character": 23
            }
          ]
        },
        {
          "id": 38,
          "name": "constant",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 39,
              "name": "constant",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`constant(x)(_) = x`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Creates a function with constant output\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 40,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 41,
                  "name": "x",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "R"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 42,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 43,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "typeParameter": [
                        {
                          "id": 44,
                          "name": "S",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "parameters": [
                        {
                          "id": 45,
                          "name": "y",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        }
                      ],
                      "type": {
                        "type": "typeParameter",
                        "name": "R"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Function.ts",
                      "line": 29,
                      "character": 34
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Function.ts",
              "line": 29,
              "character": 24
            }
          ]
        },
        {
          "id": 6,
          "name": "curry",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 7,
              "name": "curry",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`curry(f)(x)(y) = f(x, y)`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Curry a function\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 8,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 9,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 10,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 11,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 12,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 13,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 14,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            },
                            {
                              "id": 15,
                              "name": "y",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Function.ts",
                          "line": 13,
                          "character": 33
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 16,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 17,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 18,
                          "name": "x",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "typeParameter",
                            "name": "R"
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 19,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 20,
                              "name": "__call",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 21,
                                  "name": "y",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "S"
                                  }
                                }
                              ],
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "Function.ts",
                              "line": 13,
                              "character": 63
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Function.ts",
                      "line": 13,
                      "character": 53
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Function.ts",
              "line": 13,
              "character": 21
            }
          ]
        },
        {
          "id": 46,
          "name": "flip",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 47,
              "name": "flip",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`flip(f)(x)(y) = f(y)(x)`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Flips the arguments for a function that returns another function\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 48,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 49,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 50,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 51,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 52,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 53,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 54,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 55,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 56,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 57,
                                      "name": "y",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "typeParameter",
                                        "name": "S"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "T"
                                  }
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "Function.ts",
                                  "line": 37,
                                  "character": 42
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Function.ts",
                          "line": 37,
                          "character": 32
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 58,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 59,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 60,
                          "name": "y",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 61,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 62,
                              "name": "__call",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 63,
                                  "name": "x",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "R"
                                  }
                                }
                              ],
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "Function.ts",
                              "line": 37,
                              "character": 66
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Function.ts",
                      "line": 37,
                      "character": 56
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Function.ts",
              "line": 37,
              "character": 20
            }
          ]
        },
        {
          "id": 2,
          "name": "ident",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 3,
              "name": "ident",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`ident(x) = x`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Identity function\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 4,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 5,
                  "name": "x",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "T"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Function.ts",
              "line": 5,
              "character": 21
            }
          ]
        },
        {
          "id": 82,
          "name": "through",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 83,
              "name": "through",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`through(f)(op)(x, y) = op(f(x), f(y))`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Threads a function `f` through a binary operation `op`\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 84,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 85,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 86,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 87,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 88,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 89,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Function.ts",
                          "line": 56,
                          "character": 4
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 90,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 91,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "typeParameter": [
                        {
                          "id": 92,
                          "name": "T",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "parameters": [
                        {
                          "id": 93,
                          "name": "op",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 94,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 95,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 96,
                                      "name": "x",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "typeParameter",
                                        "name": "S"
                                      }
                                    },
                                    {
                                      "id": 97,
                                      "name": "y",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "typeParameter",
                                        "name": "S"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "T"
                                  }
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "Function.ts",
                                  "line": 57,
                                  "character": 10
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 98,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "signatures": [
                            {
                              "id": 99,
                              "name": "__call",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 100,
                                  "name": "x",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "R"
                                  }
                                },
                                {
                                  "id": 101,
                                  "name": "y",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "R"
                                  }
                                }
                              ],
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "Function.ts",
                              "line": 57,
                              "character": 32
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Function.ts",
                      "line": 57,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Function.ts",
              "line": 55,
              "character": 23
            }
          ]
        },
        {
          "id": 22,
          "name": "uncurry",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 23,
              "name": "uncurry",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`uncurry(f)(x, y) = f(x)(y)`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Uncurry a function\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 24,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 25,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 26,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 27,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 28,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 29,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 30,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 31,
                              "name": "__type",
                              "kind": 65536,
                              "kindString": "Type literal",
                              "flags": {},
                              "signatures": [
                                {
                                  "id": 32,
                                  "name": "__call",
                                  "kind": 4096,
                                  "kindString": "Call signature",
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 33,
                                      "name": "y",
                                      "kind": 32768,
                                      "kindString": "Parameter",
                                      "flags": {},
                                      "type": {
                                        "type": "typeParameter",
                                        "name": "S"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "typeParameter",
                                    "name": "T"
                                  }
                                }
                              ],
                              "sources": [
                                {
                                  "fileName": "Function.ts",
                                  "line": 21,
                                  "character": 45
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Function.ts",
                          "line": 21,
                          "character": 35
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 34,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 35,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 36,
                          "name": "x",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "typeParameter",
                            "name": "R"
                          }
                        },
                        {
                          "id": 37,
                          "name": "y",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        }
                      ],
                      "type": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Function.ts",
                      "line": 21,
                      "character": 59
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Function.ts",
              "line": 21,
              "character": 23
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [64, 38, 6, 46, 2, 82, 22]
        }
      ],
      "sources": [
        {
          "fileName": "Function.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 370,
      "name": "\"Iterable\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/Users/cousi/Documents/GitHub/Documents/dev/TypeScript/Utilities/src/Iterable.ts",
      "children": [
        {
          "id": 480,
          "name": "accumulate",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 481,
              "name": "accumulate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Applies a reduction over the elements of an iterable and returns the partial results\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 482,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 483,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 484,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 485,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 486,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 487,
                              "name": "accum",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            },
                            {
                              "id": 488,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 283,
                          "character": 5
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 489,
                  "name": "init",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 490,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 491,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 492,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 285,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 282,
              "character": 26
            }
          ]
        },
        {
          "id": 530,
          "name": "bundle",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 531,
              "name": "bundle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Bundles the results of an iterable into groups of `n`.\n`n` is allowed to be +Infinity, in which case, the first\nbundle returned contains everything. Be careful about\ninfinite iterables.\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 532,
                  "name": "n",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 533,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 534,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "typeParameter": [
                        {
                          "id": 535,
                          "name": "T",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "parameters": [
                        {
                          "id": 536,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "array",
                            "elementType": {
                              "type": "typeParameter",
                              "name": "T"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 412,
                      "character": 34
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 412,
              "character": 22
            }
          ]
        },
        {
          "id": 517,
          "name": "concat",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 518,
              "name": "concat",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Joins together an iterable collection of iterables\nBe careful regarding infinite iterables.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 519,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 520,
                  "name": "xss",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Iterable",
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 354,
              "character": 23
            }
          ]
        },
        {
          "id": 392,
          "name": "concatMap",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 393,
              "name": "concatMap",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Maps a function over elements of an iterable and concatenates the results.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 394,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 395,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 396,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 397,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 398,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 399,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 35,
                          "character": 5
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 400,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 401,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 402,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 36,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 34,
              "character": 25
            }
          ]
        },
        {
          "id": 437,
          "name": "cycle",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 438,
              "name": "cycle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns an infinite iterable which cycles through the elements of `xs`\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 439,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 440,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Iterable",
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 209,
              "character": 22
            }
          ]
        },
        {
          "id": 410,
          "name": "drop",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 411,
              "name": "drop",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Drops the first `n` elements of an iterable."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 412,
                  "name": "n",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "a positive integer\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 413,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 414,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "typeParameter": [
                        {
                          "id": 415,
                          "name": "T",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "parameters": [
                        {
                          "id": 416,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 98,
                      "character": 32
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 98,
              "character": 20
            }
          ]
        },
        {
          "id": 427,
          "name": "dropWhile",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 428,
              "name": "dropWhile",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Drops the shortest subsequence of an iterable whose elements all make `pred` true.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 429,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 430,
                  "name": "pred",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 431,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 432,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 433,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 181,
                          "character": 7
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 434,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 435,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 436,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 182,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 180,
              "character": 25
            }
          ]
        },
        {
          "id": 447,
          "name": "every",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 448,
              "name": "every",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns true if and only if every element of the iterable makes `pred` true.\nShort-circuits once a false is observed.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 449,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 450,
                  "name": "pred",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 451,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 452,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 453,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 241,
                          "character": 7
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 454,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 455,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 456,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 242,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 240,
              "character": 21
            }
          ]
        },
        {
          "id": 382,
          "name": "filter",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 383,
              "name": "filter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Filter an iterable to one whose elements all make `pred` true.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 384,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 385,
                  "name": "pred",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 386,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 387,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 388,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 19,
                          "character": 7
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 389,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 390,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 391,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 20,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 18,
              "character": 22
            }
          ]
        },
        {
          "id": 521,
          "name": "interleave",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 522,
              "name": "interleave",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Interleaves two iterables into one.\nStops as soon as one of the two iterables stops.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 523,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 524,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                },
                {
                  "id": 525,
                  "name": "ys",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Iterable",
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 366,
              "character": 26
            }
          ]
        },
        {
          "id": 504,
          "name": "iterable",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 505,
              "name": "iterable",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Builds functions over iterables recursively.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 506,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 507,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 508,
                  "name": "init",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                },
                {
                  "id": 509,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 510,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 511,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 512,
                              "name": "accum",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            },
                            {
                              "id": 513,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 339,
                          "character": 5
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 514,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 515,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 516,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 340,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 337,
              "character": 24
            }
          ]
        },
        {
          "id": 371,
          "name": "map",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 372,
              "name": "map",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Applies a function over the elements of an iterable.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 373,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 374,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 375,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 376,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 377,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 378,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 6,
                          "character": 29
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 379,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 380,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 381,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 6,
                      "character": 43
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 6,
              "character": 19
            }
          ]
        },
        {
          "id": 445,
          "name": "naturals",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 446,
              "name": "naturals",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns the infinite iterable `(0, 1, 2, 3, ...)`.\n"
                  }
                ]
              },
              "type": {
                "type": "reference",
                "name": "Iterable",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 229,
              "character": 25
            }
          ]
        },
        {
          "id": 467,
          "name": "reduce",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 468,
              "name": "reduce",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Applies a reduction over the elements of an iterable."
                  },
                  {
                    "tag": "see",
                    "text": "[[iterable]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 469,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 470,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 471,
                  "name": "fn",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 472,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 473,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 474,
                              "name": "accum",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            },
                            {
                              "id": 475,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 273,
                          "character": 5
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 476,
                  "name": "init",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 477,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 478,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 479,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 275,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 272,
              "character": 22
            }
          ]
        },
        {
          "id": 441,
          "name": "repeat",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 442,
              "name": "repeat",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns an infinite iterable which repeatedly returns `x`\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 443,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 444,
                  "name": "x",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Iterable",
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 220,
              "character": 23
            }
          ]
        },
        {
          "id": 457,
          "name": "some",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 458,
              "name": "some",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns true if and only if there is at least one element of the iterable which makes `pred` true.\nShort-circuits once a true is observed.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 459,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 460,
                  "name": "pred",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 461,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 462,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 463,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 257,
                          "character": 29
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 464,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 465,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 466,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 257,
                      "character": 49
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 257,
              "character": 20
            }
          ]
        },
        {
          "id": 403,
          "name": "take",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 404,
              "name": "take",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Takes the first `n` elements of an iterable and return the results as an array."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 405,
                  "name": "n",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "a positive integer\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 406,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 407,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "typeParameter": [
                        {
                          "id": 408,
                          "name": "T",
                          "kind": 131072,
                          "kindString": "Type parameter",
                          "flags": {}
                        }
                      ],
                      "parameters": [
                        {
                          "id": 409,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 51,
                      "character": 32
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 51,
              "character": 20
            }
          ]
        },
        {
          "id": 417,
          "name": "takeWhile",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 418,
              "name": "takeWhile",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Takes the shortest subsequence of an iterable whose elements all make `pred` true.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 419,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 420,
                  "name": "pred",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 421,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 422,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 423,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Iterable.ts",
                          "line": 157,
                          "character": 7
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 424,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 425,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 426,
                          "name": "xs",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Iterable",
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Iterable",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Iterable.ts",
                      "line": 158,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 156,
              "character": 25
            }
          ]
        },
        {
          "id": 537,
          "name": "toArray",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 538,
              "name": "toArray",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Generates all values from an iterable and returns them as an array.\nThis function short-circuits when `xs` is an array. Be\ncareful about infinite iterables.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 539,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 540,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 436,
              "character": 23
            }
          ]
        },
        {
          "id": 526,
          "name": "unique",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 527,
              "name": "unique",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns an iterable that generates only unique values.\nThis uses a Set as a cache for values that have been seen\nalready. So mindful of the space consumed when passing in\na large iterable.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 528,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 529,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Iterable",
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 396,
              "character": 23
            }
          ]
        },
        {
          "id": 499,
          "name": "unzip",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 500,
              "name": "unzip",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Unzips an iterable of tuples into a tuple of iterables.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 501,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 502,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 503,
                  "name": "xys",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "tuple",
                        "elements": [
                          {
                            "type": "typeParameter",
                            "name": "S"
                          },
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "tuple",
                "elements": [
                  {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "S"
                      }
                    ]
                  },
                  {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 324,
              "character": 21
            }
          ]
        },
        {
          "id": 493,
          "name": "zip",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 494,
              "name": "zip",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Zips up two iterables into one iterable of tuples.\nStops as soon as one of the two iterables stops.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 495,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 496,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 497,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "S"
                      }
                    ]
                  }
                },
                {
                  "id": 498,
                  "name": "ys",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Iterable",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Iterable",
                "typeArguments": [
                  {
                    "type": "tuple",
                    "elements": [
                      {
                        "type": "typeParameter",
                        "name": "S"
                      },
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Iterable.ts",
              "line": 301,
              "character": 19
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            480,
            530,
            517,
            392,
            437,
            410,
            427,
            447,
            382,
            521,
            504,
            371,
            445,
            467,
            441,
            457,
            403,
            417,
            537,
            526,
            499,
            493
          ]
        }
      ],
      "sources": [
        {
          "fileName": "Iterable.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 102,
      "name": "\"Maybe\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/Users/cousi/Documents/GitHub/Documents/dev/TypeScript/Utilities/src/Maybe.ts",
      "children": [
        {
          "id": 103,
          "name": "Maybe",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "comment": {
            "tags": [
              {
                "tag": "summary",
                "text": "A type alias that extends a type to be nullable.\n"
              }
            ]
          },
          "typeParameter": [
            {
              "id": 104,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 9,
              "character": 17
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "typeParameter",
                "name": "T"
              },
              {
                "type": "intrinsic",
                "name": "null"
              }
            ]
          }
        },
        {
          "id": 164,
          "name": "bind",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 165,
              "name": "bind",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`bind(f)(null) = null`\n`bind(f)(x) = f(x)`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "An alias of `lift`"
                  },
                  {
                    "tag": "see",
                    "text": "[[lift]]\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 166,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 167,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 168,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 169,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 170,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 171,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "Maybe",
                            "id": 103,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Maybe.ts",
                          "line": 118,
                          "character": 29
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 172,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 173,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 174,
                          "name": "xm",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Maybe",
                            "id": 103,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Maybe",
                        "id": 103,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Maybe.ts",
                      "line": 118,
                      "character": 50
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 118,
              "character": 20
            }
          ]
        },
        {
          "id": 149,
          "name": "concatMaybes",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 150,
              "name": "concatMaybes",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`concatMaybe([null, ...rest]) = concatMaybe(rest)`\n`concatMaybe([x, ...rest]) = [x, ...concatMaybe(rest)]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Takes an array of possibly null values and returns an array of only non-null values.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 151,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 152,
                  "name": "xms",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Array",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Maybe",
                        "id": 103,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 93,
              "character": 28
            }
          ]
        },
        {
          "id": 136,
          "name": "first",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 137,
              "name": "first",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`first([]) = null`\n`first([x, ...rest]) = x`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns the first element of an array if it exists, and null otherwise.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 138,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 139,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Maybe",
                "id": 103,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 62,
              "character": 21
            }
          ]
        },
        {
          "id": 117,
          "name": "isNonNull",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 118,
              "name": "isNonNull",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`isNonNull(x) === true` if and only if `x != null`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Tests if a nullable value is not null\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 119,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 120,
                  "name": "xm",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Maybe",
                    "id": 103,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 27,
              "character": 25
            }
          ]
        },
        {
          "id": 121,
          "name": "isNull",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 122,
              "name": "isNull",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`isNull(x) === true` if and only if `x == null`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Tests if a nullable value is null\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 123,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 124,
                  "name": "xm",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Maybe",
                    "id": 103,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 35,
              "character": 22
            }
          ]
        },
        {
          "id": 140,
          "name": "last",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 141,
              "name": "last",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`last([]) = null`\n`last([...rest, x]) = x`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns the last element of an array if it exists, and null otherwise.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 142,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 143,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Maybe",
                "id": 103,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 71,
              "character": 20
            }
          ]
        },
        {
          "id": 153,
          "name": "lift",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 154,
              "name": "lift",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`lift(f)(null) = null`\n`lift(f)(x) = f(x)`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Lifts a function over non-null values to one over nullable values\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 155,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 156,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 157,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 158,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 159,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 160,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Maybe.ts",
                          "line": 108,
                          "character": 29
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 161,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 162,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 163,
                          "name": "xm",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Maybe",
                            "id": 103,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Maybe",
                        "id": 103,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Maybe.ts",
                      "line": 108,
                      "character": 43
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 108,
              "character": 20
            }
          ]
        },
        {
          "id": 105,
          "name": "maybe",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 106,
              "name": "maybe",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Technically, this does *not* return a function of an optional\nparameter, as such a function could be called with no\nparameters, i.e. the first parameter being `undefined`.\n`maybe(nil, f)(null) = nil`\n`maybe(nil, f)(x) = f(x)`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Inductive rule of nullable types\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 107,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 108,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 109,
                  "name": "nil",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                },
                {
                  "id": 110,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 111,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 112,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 113,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Maybe.ts",
                          "line": 19,
                          "character": 38
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 114,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 115,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 116,
                          "name": "xm",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Maybe",
                            "id": 103,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "S"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Maybe.ts",
                      "line": 19,
                      "character": 52
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 19,
              "character": 21
            }
          ]
        },
        {
          "id": 125,
          "name": "maybeDefault",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 126,
              "name": "maybeDefault",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`maybeDefault(d)(null) = d`\n`maybeDefault(d)(x) = x`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns the value from a nullable value or a default value\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 127,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 128,
                  "name": "d",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "T"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 129,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 130,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 131,
                          "name": "xm",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Maybe",
                            "id": 103,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "T"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Maybe.ts",
                      "line": 44,
                      "character": 38
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 44,
              "character": 28
            }
          ]
        },
        {
          "id": 132,
          "name": "maybeToArray",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 133,
              "name": "maybeToArray",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`maybeToArray(null) = []`\n`maybeToArray(x) = [x]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Turns a nullable value into an array\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 134,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 135,
                  "name": "xm",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Maybe",
                    "id": 103,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "T"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "typeParameter",
                  "name": "T"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 53,
              "character": 28
            }
          ]
        },
        {
          "id": 144,
          "name": "nth",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 145,
              "name": "nth",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`nth([], _) = nth(_, 0.5) = nth(_, NaN) = nth(_, Infinity) = null`\n`nth([...firstNm1Elts, xn, ...rest], n) = xn`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Returns the nth element of an array if it exists, and null otherwise."
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 146,
                  "name": "T",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 147,
                  "name": "xs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "typeParameter",
                      "name": "T"
                    }
                  }
                },
                {
                  "id": 148,
                  "name": "n",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "comment": {
                    "text": "index of the element to return\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "Maybe",
                "id": 103,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "T"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Maybe.ts",
              "line": 82,
              "character": 19
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [103]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [164, 149, 136, 117, 121, 140, 153, 105, 125, 132, 144]
        }
      ],
      "sources": [
        {
          "fileName": "Maybe.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 541,
      "name": "\"Tuple\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true,
        "isExternal": true
      },
      "originalName": "C:/Users/cousi/Documents/GitHub/Documents/dev/TypeScript/Utilities/src/Tuple.ts",
      "children": [
        {
          "id": 542,
          "name": "Tuple",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "comment": {
            "tags": [
              {
                "tag": "deprecated",
                "text": "since Typescript 2.7 implemented them natively\n`Tuple<R,S> = [R, S]`"
              },
              {
                "tag": "summary",
                "text": "A type alias (now) for tuples\n"
              }
            ]
          },
          "typeParameter": [
            {
              "id": 543,
              "name": "R",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 544,
              "name": "S",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "sources": [
            {
              "fileName": "Tuple.ts",
              "line": 6,
              "character": 17
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "typeParameter",
                "name": "R"
              },
              {
                "type": "typeParameter",
                "name": "S"
              }
            ]
          }
        },
        {
          "id": 551,
          "name": "curried",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 552,
              "name": "curried",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`curried = x => y => [x, y]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Curried construction of a tuple.\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 553,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 554,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 555,
                  "name": "x",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "R"
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 556,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 557,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 558,
                          "name": "y",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        }
                      ],
                      "type": {
                        "type": "tuple",
                        "elements": [
                          {
                            "type": "typeParameter",
                            "name": "R"
                          },
                          {
                            "type": "typeParameter",
                            "name": "S"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Tuple.ts",
                      "line": 21,
                      "character": 36
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Tuple.ts",
              "line": 21,
              "character": 23
            }
          ]
        },
        {
          "id": 575,
          "name": "flip",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 576,
              "name": "flip",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`xy => [xy[1], xy[0]]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Flips the order of a tuple\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 577,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 578,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 579,
                  "name": "xy",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "tuple",
                    "elements": [
                      {
                        "type": "typeParameter",
                        "name": "R"
                      },
                      {
                        "type": "typeParameter",
                        "name": "S"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "tuple",
                "elements": [
                  {
                    "type": "typeParameter",
                    "name": "S"
                  },
                  {
                    "type": "typeParameter",
                    "name": "R"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Tuple.ts",
              "line": 40,
              "character": 20
            }
          ]
        },
        {
          "id": 580,
          "name": "map",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 581,
              "name": "map",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`xy => [f(xy[0]), g(xy[1])]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Maps two functions over a tuple\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 582,
                  "name": "R1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 583,
                  "name": "R2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 584,
                  "name": "T1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 585,
                  "name": "T2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 586,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 587,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 588,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 589,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R1"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T1"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Tuple.ts",
                          "line": 49,
                          "character": 4
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 590,
                  "name": "g",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 591,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 592,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 593,
                              "name": "y",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R2"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T2"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Tuple.ts",
                          "line": 50,
                          "character": 4
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 594,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 595,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 596,
                          "name": "xy",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "tuple",
                            "elements": [
                              {
                                "type": "typeParameter",
                                "name": "R1"
                              },
                              {
                                "type": "typeParameter",
                                "name": "R2"
                              }
                            ]
                          }
                        }
                      ],
                      "type": {
                        "type": "tuple",
                        "elements": [
                          {
                            "type": "typeParameter",
                            "name": "T1"
                          },
                          {
                            "type": "typeParameter",
                            "name": "T2"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Tuple.ts",
                      "line": 51,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Tuple.ts",
              "line": 48,
              "character": 19
            }
          ]
        },
        {
          "id": 559,
          "name": "product",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 560,
              "name": "product",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "`x => [f(x), g(x)]`",
                "tags": [
                  {
                    "tag": "summary",
                    "text": "Creates a function returning a tuple from two functions that share a common input type\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 561,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 562,
                  "name": "T1",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 563,
                  "name": "T2",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 564,
                  "name": "f",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 565,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 566,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 567,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T1"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Tuple.ts",
                          "line": 30,
                          "character": 4
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 568,
                  "name": "g",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 569,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "signatures": [
                        {
                          "id": 570,
                          "name": "__call",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 571,
                              "name": "x",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "typeParameter",
                                "name": "R"
                              }
                            }
                          ],
                          "type": {
                            "type": "typeParameter",
                            "name": "T2"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "Tuple.ts",
                          "line": 31,
                          "character": 4
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 572,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 573,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 574,
                          "name": "x",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "typeParameter",
                            "name": "R"
                          }
                        }
                      ],
                      "type": {
                        "type": "tuple",
                        "elements": [
                          {
                            "type": "typeParameter",
                            "name": "T1"
                          },
                          {
                            "type": "typeParameter",
                            "name": "T2"
                          }
                        ]
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "Tuple.ts",
                      "line": 32,
                      "character": 2
                    }
                  ]
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "Tuple.ts",
              "line": 29,
              "character": 23
            }
          ]
        },
        {
          "id": 545,
          "name": "tuple",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isExternal": true
          },
          "signatures": [
            {
              "id": 546,
              "name": "tuple",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "deprecated",
                    "text": "since Typescript 2.7\n`(x, y) => [x, y]`"
                  },
                  {
                    "tag": "summary",
                    "text": "Constructs a tuple\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 547,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                },
                {
                  "id": 548,
                  "name": "S",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 549,
                  "name": "x",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "R"
                  }
                },
                {
                  "id": 550,
                  "name": "y",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "typeParameter",
                    "name": "S"
                  }
                }
              ],
              "type": {
                "type": "tuple",
                "elements": [
                  {
                    "type": "typeParameter",
                    "name": "R"
                  },
                  {
                    "type": "typeParameter",
                    "name": "S"
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "Tuple.ts",
              "line": 13,
              "character": 21
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [542]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [551, 575, 580, 559, 545]
        }
      ],
      "sources": [
        {
          "fileName": "Tuple.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 597,
      "name": "\"index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "C:/Users/cousi/Documents/GitHub/Documents/dev/TypeScript/Utilities/src/index.ts",
      "sources": [
        {
          "fileName": "index.ts",
          "line": 1,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "External modules",
      "kind": 1,
      "children": [175, 254, 1, 370, 102, 541, 597]
    }
  ]
}
